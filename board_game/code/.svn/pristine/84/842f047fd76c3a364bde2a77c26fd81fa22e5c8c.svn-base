<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../../../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../../../.resources/report.gif" type="image/gif"/><title>ConnectButtonController.java</title><link rel="stylesheet" href="../../../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../../../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="right"><a href="../../../.sessions.html" class="el_session">Sessions</a></span><a href="../../../index.html" class="el_report">Merged (Apr 28, 2012 2:01:54 PM)</a> &gt; <a href="../../index.html" class="el_group">Framework</a> &gt; <a href="../index.html" class="el_bundle">src</a> &gt; <a href="index.html" class="el_package">ks.client.lobby</a> &gt; <span class="el_source">ConnectButtonController.java</span></div><h1>ConnectButtonController.java</h1><pre class="source lang-java linenums">package ks.client.lobby;

import ks.client.UserContext;
import ks.client.controllers.ConnectController;
import ks.client.interfaces.ILobby;
import ks.client.interfaces.ILobbyInitialize;
import ks.client.ipc.Client;

/**
 * GUI-based controller to manage request from user to connect to the KombatGames
 * server with given user and password.
 * 
 * @author George Heineman
 */
public class ConnectButtonController {
	
	/** Frame being managed. */
	ConnectFrame frame;
	
	/** When constructing controller, need frame. */
<span class="nc" id="L21">	public ConnectButtonController (ConnectFrame frame) {</span>
<span class="nc" id="L22">		this.frame = frame;</span>
<span class="nc" id="L23">	}</span>
	
	public ILobby process(ILobbyInitialize lobbyInit) {
		// initiate a new context
<span class="nc" id="L27">		UserContext context = new UserContext();</span>
<span class="nc" id="L28">		context.setUser(frame.loginUserText.getText());</span>

		// get hash for password.
<span class="nc" id="L31">		String password = frame.extractPassword(frame.loginPassText);</span>
<span class="nc" id="L32">		password = Client.sha1(password);</span>
<span class="nc" id="L33">		context.setPassword(password);</span>
		
<span class="nc" id="L35">		context.setSelfRegister(false);</span>
		
		// Create LobbyGUI presuming successful connection
		// for now it is visible (debugging purposes) but it
		// will become visible once secure connection has been
		// established.
<span class="nc" id="L41">		LobbyFrame lobby = new LobbyFrame (context);</span>
<span class="nc" id="L42">		lobbyInit.initializeLobby(lobby);</span>
<span class="nc" id="L43">		lobby.setVisible(true);</span>
					
		// just when I said it was uncommon for controllers to invoke other
		// controllers, look what comes up naturally...
<span class="nc bnc" id="L47" title="All 2 branches missed.">		if (new ConnectController(lobby).process(context)) {</span>
			// success
		
			// within this anonymous class we can access
			// our outer class with this little bit of syntax. Make
			// sure to dispose for thread.
<span class="nc" id="L53">			frame.setVisible(false);</span>
<span class="nc" id="L54">			frame.dispose();</span>
		}	
		
<span class="nc" id="L57">		return lobby;</span>
	}
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.5.6.201201232323</span>Merged (Apr 28, 2012 2:01:54 PM)</div></body></html>