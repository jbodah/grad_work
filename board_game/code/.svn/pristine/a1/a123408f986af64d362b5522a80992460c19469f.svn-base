<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../../../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../../../.resources/report.gif" type="image/gif"/><title>TestMutableInteger.java</title><link rel="stylesheet" href="../../../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../../../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="right"><a href="../../../.sessions.html" class="el_session">Sessions</a></span><a href="../../../index.html" class="el_report">Merged (Apr 28, 2012 2:01:54 PM)</a> &gt; <a href="../../index.html" class="el_group">Framework</a> &gt; <a href="../index.html" class="el_bundle">test</a> &gt; <a href="index.html" class="el_package">ks.common.model</a> &gt; <span class="el_source">TestMutableInteger.java</span></div><h1>TestMutableInteger.java</h1><pre class="source lang-java linenums">package ks.common.model;

import junit.framework.TestCase;

<span class="nc" id="L5">public class TestMutableInteger extends TestCase {</span>

	public void testBasic() {
<span class="nc" id="L8">		MutableInteger mi = new MutableInteger(71);</span>
<span class="nc" id="L9">		assertEquals (71, mi.getValue());</span>
<span class="nc" id="L10">		mi.setValue(42);</span>
<span class="nc" id="L11">		assertEquals (42, mi.getValue());</span>
		
		
		// no impact
<span class="nc" id="L15">		mi.setValue(42);</span>
<span class="nc" id="L16">		assertEquals (42, mi.getValue());</span>
<span class="nc" id="L17">	}</span>
	
	
	public void testNamed() {
<span class="nc" id="L21">		MutableInteger mi = new MutableInteger(&quot;myName&quot;, 33);</span>
		
		// with no name, the name becomes MutableInteger
<span class="nc" id="L24">		assertEquals (&quot;myName&quot;, mi.getName());</span>
<span class="nc" id="L25">		assertEquals (33, mi.getValue());</span>
<span class="nc" id="L26">	}</span>
	
	public void testNoNamed() {
<span class="nc" id="L29">		MutableInteger mi = new MutableInteger(null, 55);</span>
		
		// with no name, the name becomes MutableString
<span class="nc" id="L32">		assertTrue (mi.getName().startsWith(&quot;MutableInteger&quot;));</span>
<span class="nc" id="L33">		assertEquals (55, mi.getValue());</span>
<span class="nc" id="L34">	}</span>
	
	public void testToString() {
<span class="nc" id="L37">		MutableInteger mi = new MutableInteger(&quot;myName&quot;, 33);</span>
<span class="nc" id="L38">		assertEquals (&quot;ks.common.model.MutableInteger:myName=33&quot;, mi.toString());</span>
<span class="nc" id="L39">	}</span>
	
	public void testMutability() {
		// you can actually change a MI
<span class="nc" id="L43">		MutableInteger mi = new MutableInteger(null, 55);</span>
		
		// with no name, the name becomes MutableString
<span class="nc" id="L46">		assertEquals (55, mi.getValue());</span>
<span class="nc" id="L47">		mi.increment(-3);</span>
<span class="nc" id="L48">		assertEquals (52, mi.getValue());</span>
<span class="nc" id="L49">		mi.increment(3);</span>
<span class="nc" id="L50">		assertEquals (55, mi.getValue());</span>
		
		// nothing
<span class="nc" id="L53">		mi.increment(0);</span>
<span class="nc" id="L54">		assertEquals (55, mi.getValue());</span>
<span class="nc" id="L55">	}</span>
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.5.6.201201232323</span>Merged (Apr 28, 2012 2:01:54 PM)</div></body></html>