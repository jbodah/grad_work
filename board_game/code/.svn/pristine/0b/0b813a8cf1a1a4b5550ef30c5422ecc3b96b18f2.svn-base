<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../../../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../../../.resources/report.gif" type="image/gif"/><title>TestMutableString.java</title><link rel="stylesheet" href="../../../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../../../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="right"><a href="../../../.sessions.html" class="el_session">Sessions</a></span><a href="../../../index.html" class="el_report">Merged (Apr 28, 2012 2:01:54 PM)</a> &gt; <a href="../../index.html" class="el_group">Framework</a> &gt; <a href="../index.html" class="el_bundle">test</a> &gt; <a href="index.html" class="el_package">ks.common.model</a> &gt; <span class="el_source">TestMutableString.java</span></div><h1>TestMutableString.java</h1><pre class="source lang-java linenums">package ks.common.model;

import junit.framework.TestCase;

<span class="nc" id="L5">public class TestMutableString extends TestCase {</span>

	public void testBasic() {
<span class="nc" id="L8">		MutableString ms = new MutableString(&quot;one&quot;);</span>
<span class="nc" id="L9">		assertEquals (&quot;one&quot;, ms.getValue());</span>
<span class="nc" id="L10">		ms.setValue(&quot;two&quot;);</span>
<span class="nc" id="L11">		assertEquals (&quot;two&quot;, ms.getValue());</span>
		
		// bad attempts
<span class="nc" id="L14">		ms.setValue(null);</span>
<span class="nc" id="L15">		assertEquals (&quot;two&quot;, ms.getValue());</span>
		
		// no impact
<span class="nc" id="L18">		ms.setValue(&quot;two&quot;);</span>
<span class="nc" id="L19">		assertEquals (&quot;two&quot;, ms.getValue());</span>
<span class="nc" id="L20">	}</span>
	
	public void testNoArg() {
<span class="nc" id="L23">		MutableString ms = new MutableString(&quot;one&quot;);</span>
		
		// with no name, the name becomes MutableString
<span class="nc" id="L26">		assertTrue (ms.getName().startsWith(&quot;MutableString&quot;));</span>
<span class="nc" id="L27">	}</span>
	
	
	public void testNamed() {
<span class="nc" id="L31">		MutableString ms = new MutableString(&quot;myName&quot;, &quot;one&quot;);</span>
		
		// with no name, the name becomes MutableString
<span class="nc" id="L34">		assertEquals (&quot;myName&quot;, ms.getName());</span>
<span class="nc" id="L35">		assertEquals (&quot;one&quot;, ms.getValue());</span>
<span class="nc" id="L36">	}</span>
	
	public void testNoNamed() {
<span class="nc" id="L39">		MutableString ms = new MutableString(null, &quot;one&quot;);</span>
		
		// with no name, the name becomes MutableString
<span class="nc" id="L42">		assertTrue (ms.getName().startsWith(&quot;MutableString&quot;));</span>
<span class="nc" id="L43">		assertEquals (&quot;one&quot;, ms.getValue());</span>
<span class="nc" id="L44">	}</span>
	
	
	public void testToString() {
<span class="nc" id="L48">		MutableString ms = new MutableString(&quot;myName&quot;, &quot;one&quot;);</span>
<span class="nc" id="L49">		assertEquals (&quot;ks.common.model.MutableString:myName=one&quot;, ms.toString());</span>
<span class="nc" id="L50">	}</span>
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.5.6.201201232323</span>Merged (Apr 28, 2012 2:01:54 PM)</div></body></html>