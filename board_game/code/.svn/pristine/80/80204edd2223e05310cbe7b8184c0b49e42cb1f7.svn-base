<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../../../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../../../.resources/report.gif" type="image/gif"/><title>SampleOutput.java</title><link rel="stylesheet" href="../../../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../../../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="right"><a href="../../../.sessions.html" class="el_session">Sessions</a></span><a href="../../../index.html" class="el_report">Merged (Apr 28, 2012 2:01:54 PM)</a> &gt; <a href="../../index.html" class="el_group">Framework</a> &gt; <a href="../index.html" class="el_bundle">test</a> &gt; <a href="index.html" class="el_package">ks.framework.communicator</a> &gt; <span class="el_source">SampleOutput.java</span></div><h1>SampleOutput.java</h1><pre class="source lang-java linenums">package ks.framework.communicator;

import java.util.ArrayList;

import ks.framework.interfaces.ICommunicator;

/**
 * Helper class for test cases.
 * &lt;p&gt;
 * Made public for use by other groups.
 * @author heineman
 */
<span class="nc" id="L13">public class SampleOutput implements ICommunicator {</span>

<span class="nc" id="L15">	boolean open = true;</span>

	// store objects in queue
<span class="nc" id="L18">	ArrayList&lt;Object&gt; queue = new ArrayList&lt;Object&gt;();</span>

	public void clear() {
<span class="nc" id="L21">		queue.clear();</span>
<span class="nc" id="L22">	}</span>

	@Override
	public void close() {
<span class="nc" id="L26">		open = false;</span>
<span class="nc" id="L27">	}</span>

	public boolean hasObject() {
		boolean status;
<span class="nc" id="L31">		synchronized (queue) {</span>
<span class="nc bnc" id="L32" title="All 2 branches missed.">			status = !queue.isEmpty();</span>
		}
		
<span class="nc" id="L35">		return status;</span>
	}
	
	@Override
	public Object readObject() {
<span class="nc bnc" id="L40" title="All 2 branches missed.">		if (!open) { return null; }</span>

		Object o;
<span class="nc" id="L43">		synchronized(queue) {</span>
<span class="nc" id="L44">			o = queue.remove(0);</span>
		}

<span class="nc" id="L47">		return o;</span>
	}

	@Override
	public boolean writeObject(Object o) {
<span class="nc bnc" id="L52" title="All 2 branches missed.">		if (!open) { return false; }</span>

<span class="nc" id="L54">		synchronized (queue) {</span>
<span class="nc" id="L55">			queue.add(o);</span>
		}

<span class="nc" id="L58">		return true;</span>
	}

}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.5.6.201201232323</span>Merged (Apr 28, 2012 2:01:54 PM)</div></body></html>