<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../../../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../../../.resources/report.gif" type="image/gif"/><title>ChatResponseHandler.java</title><link rel="stylesheet" href="../../../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../../../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="right"><a href="../../../.sessions.html" class="el_session">Sessions</a></span><a href="../../../index.html" class="el_report">Merged (Apr 28, 2012 2:01:54 PM)</a> &gt; <a href="../../index.html" class="el_group">WordstealClient</a> &gt; <a href="../index.html" class="el_bundle">src</a> &gt; <a href="index.html" class="el_package">wordstealclient.controllers.xml_handlers</a> &gt; <span class="el_source">ChatResponseHandler.java</span></div><h1>ChatResponseHandler.java</h1><pre class="source lang-java linenums">package wordstealclient.controllers.xml_handlers;

import org.w3c.dom.Node;

import wordstealclient.entities.Room;
import wordstealclient.util.GUIUpdater;
import wordstealclient.util.NodeHelper;

import ks.client.interfaces.ILobby;
import ks.framework.common.Message;

/**
 * This code handles the parsing of XML and middle-layer logic with respect to the response received.
 * 
 * @author jbodah
 *
 */
<span class="nc" id="L18">public class ChatResponseHandler {</span>
	
	public static void parseXML(Message response, ILobby lobby) {
<span class="fc" id="L21">		Node 	outputNode 		= response.contents() ; 	// Root's children</span>
<span class="fc" id="L22">		boolean isPublic 		= true ;</span>
<span class="fc" id="L23">		String	outputText		= new String() ;</span>
<span class="fc" id="L24">		boolean fromSystem		= false ;</span>
<span class="fc" id="L25">		String	sender 			= new String() ;</span>
		
<span class="fc bfc" id="L27" title="All 2 branches covered.">		if( NodeHelper.strAttribute(outputNode, &quot;from&quot;) != null )</span>
<span class="fc" id="L28">			sender = Room.getInstance().getPlayer(NodeHelper.intAttribute( outputNode, &quot;from&quot; )).getAlias();</span>
		
<span class="fc bfc" id="L30" title="All 2 branches covered.">		if( NodeHelper.strAttribute(outputNode, &quot;public&quot;) != null )</span>
<span class="fc" id="L31">			isPublic = NodeHelper.boolAttribute(outputNode, &quot;public&quot;) ;</span>
		
<span class="fc bfc" id="L33" title="All 2 branches covered.">		if( NodeHelper.strAttribute(outputNode, &quot;system&quot;) != null ) {</span>
<span class="fc" id="L34">			fromSystem = NodeHelper.boolAttribute(outputNode, &quot;system&quot; ) ;</span>
<span class="fc" id="L35">			sender = &quot;SYSTEM&quot; ;</span>
		}
		
<span class="fc bfc" id="L38" title="All 2 branches covered.">		while( outputNode.hasChildNodes() ) {	</span>
<span class="fc" id="L39">			outputText += parseTierOne(outputNode.getFirstChild()) ;</span>
<span class="fc" id="L40">			outputNode.removeChild(outputNode.getFirstChild()) ;</span>
		}
		
<span class="fc" id="L43">		GUIUpdater.updateChatPanel(isPublic, fromSystem, sender, outputText, lobby);</span>
<span class="fc" id="L44">	}</span>
	
	private static String parseTierOne( Node textNode ) {
<span class="fc" id="L47">		return textNode.getTextContent() ;</span>
	}
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.5.6.201201232323</span>Merged (Apr 28, 2012 2:01:54 PM)</div></body></html>